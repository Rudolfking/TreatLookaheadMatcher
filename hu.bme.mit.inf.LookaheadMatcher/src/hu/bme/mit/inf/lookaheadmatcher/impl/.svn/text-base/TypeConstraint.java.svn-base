package hu.bme.mit.inf.lookaheadmatcher.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EClassifier;

public class TypeConstraint extends AxisConstraint // implements IConstraint
{
	// a variable MUST BE a certain type
	// type can be EInt, EString, EClass
	private LookVariable lookvariable;
	private EClassifier type;
	
	private boolean isDatatype;
	public boolean isDatatype()
	{
		return this.isDatatype;
	}
	
	public LookVariable getLookvariable()
	{
		return lookvariable;
	}
	public void setLookvariable(LookVariable lookvariable)
	{
		this.lookvariable = lookvariable;
	}
	public EClassifier getType()
	{
		return type;
	}
	public void setType(EClassifier Type)
	{
		this.type = Type;
	}
	
	@SuppressWarnings("unused")
	private TypeConstraint(){}
	
	public TypeConstraint(LookVariable lookVar, EClassifier Type)
	{
		super();
		this.lookvariable = lookVar;
		this.type = Type;
		if (type instanceof EClass)
			this.isDatatype = false;
		else
			this.isDatatype = true;
	}
	
	@Override
	public String toString()
	{
		return this.type.getName()+"("+this.lookvariable.getVariableName()+")";
	}
}
